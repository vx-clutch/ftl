<program> ::= <declaration-list>

<declaration-list> ::= <declaration> | <declaration> <declaration-list>

<declaration> ::= <variable-declaration> | <function-declaration>

<variable-declaration> ::= <type> <identifier> <optional-initialization> ";"
<optional-initialization> ::= "=" <expression> | ε

<function-declaration> ::= <type> <identifier> "(" <parameter-list> ")" <compound-statement>
<parameter-list> ::= <parameter> | <parameter> "," <parameter-list> | "void" | ε
<parameter> ::= <type> <identifier>

<type> ::= "int" | "char" | "void"

<compound-statement> ::= "{" <statement-list> "}"
<statement-list> ::= <statement> | <statement> <statement-list> | ε

<statement> ::= <expression-statement>
              | <compound-statement>
              | <if-statement>
              | <while-statement>
              | <return-statement>

<expression-statement> ::= <expression> ";" | ";"

<if-statement> ::= "if" "(" <expression> ")" <statement> <optional-else>
<optional-else> ::= "else" <statement> | ε

<while-statement> ::= "while" "(" <expression> ")" <statement>

<return-statement> ::= "return" <expression> ";"

<expression> ::= <identifier>
               | <constant>
               | <expression> <binary-operator> <expression>
               | "(" <expression> ")"

<constant> ::= <integer-constant> | <float-constant> | <character-constant>
<integer-constant> ::= [0-9]+
<float-constant> ::= [0-9]+"."[0-9]*
<character-constant> ::= "'" <character> "'"

<binary-operator> ::= "+" | "-" | "*" | "/" | "==" | "!=" | "<" | ">" | "<=" | ">="

<identifier> ::= [a-zA-Z_][a-zA-Z0-9_]*
